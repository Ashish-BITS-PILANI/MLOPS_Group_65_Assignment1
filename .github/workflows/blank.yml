name: MLOPS Group 65 CICD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Initialize submodules

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 MLOPS_Group_65_Assignment1/military-object-detection-recognition-yolov11.ipynb --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 MLOPS_Group_65_Assignment1/military-object-detection-recognition-yolov11.ipynb --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Initialize submodules

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Initialize submodules

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t your-dockerhub-username/your-image-name:latest .

      - name: Push Docker image
        run: docker push your-dockerhub-username/your-image-name:latest
