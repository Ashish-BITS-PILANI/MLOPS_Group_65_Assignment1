name: CI Pipeline

on:
  push:
    branches:
      - main
###
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Initialize submodules
          fetch-depth: 0  # Fetch all history for all submodules

      - name: Initialize submodules
        run: |
          git submodule sync
          git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Initialize submodules
          fetch-depth: 0  # Fetch all history for all submodules

      - name: Initialize submodules
        run: |
          git submodule sync
          git submodule update --init --recursive

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nbconvert
          pip install "numpy<2"

    
      - name: Install Torchvision
        run: |
          pip install torchvision  # Ensure torchvision is installed

     # - name: Install Ultralytics
      #  run: |
       #   pip install ultralytics==8.0.20  # Ensure the correct version of ultralytics is installed

      - name: Install Jupyter Kernel
        run: |
          python -m ipykernel install --user --name=python3
      - name: Check for KIIT-MiTA.yml file
        run: |
          if [ ! -f /home/nic/workspace/Mlops/M_H_D/Military_Object_Detection/archive/KIIT-MiTA/KIIT-MiTA.yml ]; then
            echo "File KIIT-MiTA.yml not found!"
            exit 1
          fi

      - name: Execute Jupyter Notebook
        run: |
          jupyter nbconvert --to html --execute "military-object-detection-recognition-yolov11.ipynb" --output result.html 

  build:
    needs: test
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Initialize submodules
          fetch-depth: 0  # Fetch all history for all submodules

      - name: Initialize submodules
        run: |
          git submodule sync
          git submodule update --init --recursive

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/group65-image:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/group65-image:latest
